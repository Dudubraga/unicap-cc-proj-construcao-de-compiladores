
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ANDAND ANDANDEQUAL COMMA COMMENT DIVEQUAL DIVIDE DOT DOTDOTDOT ELSE EQUAL EQUALS FOR GREATER GREATEREQUAL ID IF LBRACE LBRACKET LESS LESSEQUAL LPAREN MINUS MINUSEQUAL MINUSMINUS MODEQUAL MODULO MULTICOMMENT NOT NOTEQUAL NUM_DEC NUM_INT OROR OROREQUAL PLUS PLUSEQUAL PLUSPLUS RBRACE RBRACKET RETURN RPAREN SEMICOLON STRUCT TEXTO TIMES TIMESEQUAL TIPO WHILE\n    programa : declaracao\n    \n    declaracao : declaracao_variavel\n                | declaracao_funcao\n                | declaracao_estrutura\n                | comentario\n    \n    declaracao_variavel : tipo ID SEMICOLON\n                        | tipo ID EQUAL expressao SEMICOLON\n    \n    tipo : NUM_INT\n         | NUM_DEC\n         | TEXTO\n    \n    declaracao_funcao : tipo ID LPAREN parametros RPAREN bloco\n    \n    parametros : parametros\n               | parametros COMMA parametros\n               | tipo ID\n               | tipo ID LBRACKET RBRACKET\n    \n    bloco : LBRACE declaracao RBRACE\n\n    \n    comentario : COMMENT\n               | MULTICOMMENT\n    \n    expressoes : atribuicao\n    \n    atribuicao : ID EQUAL expressao\n               | ID PLUSEQUAL expressao\n               | ID MINUSEQUAL expressao\n               | ID TIMESEQUAL expressao\n               | ID DIVEQUAL expressao\n               | ID MODEQUAL expressao\n               | ID ANDANDEQUAL expressao\n               | ID OROREQUAL expressao\n               | ID EQUAL ID\n               | ID PLUSEQUAL ID\n               | ID MINUSEQUAL ID\n               | ID TIMESEQUAL ID\n               | ID DIVEQUAL ID\n               | ID MODEQUAL ID\n               | ID ANDANDEQUAL ID\n               | ID OROREQUAL ID\n    \n    estrutura_controle : IF LPAREN expressao RPAREN bloco\n                       | IF LPAREN expressao RPAREN ELSE bloco\n                       | WHILE LPAREN expressao RPAREN bloco\n                       | FOR LPAREN expressao SEMICOLON expressao SEMICOLON expressao RPAREN bloco\n                       | RETURN expressao\n    \n    declaracao_estrutura : STRUCT ID LBRACE declaracao_variavel RBRACE\n    \n    array : ID LBRACKET expressao RBRACKET\n          | ID LBRACKET RBRACKET\n          | ID LBRACE expressoes RBRACE\n    \n    expressao : expressao_logica\n    \n    expressao_logica : expressao_relacional\n                     | expressao_logica ANDAND expressao_relacional\n                     | expressao_logica OROR expressao_relacional\n    \n    expressao_relacional : expressao_aritmetica\n                         | expressao_aritmetica GREATER expressao_aritmetica\n                         | expressao_aritmetica GREATEREQUAL expressao_aritmetica\n                         | expressao_aritmetica LESS expressao_aritmetica\n                         | expressao_aritmetica LESSEQUAL expressao_aritmetica\n                         | expressao_aritmetica NOTEQUAL expressao_aritmetica\n                         | expressao_aritmetica EQUALS expressao_aritmetica\n    \n    expressao_aritmetica : expressao_multiplicativa\n                         | expressao_aritmetica PLUS expressao_multiplicativa\n                         | expressao_aritmetica MINUS expressao_multiplicativa\n    \n    expressao_multiplicativa : expressao_unaria\n                             | expressao_multiplicativa TIMES expressao_unaria\n                             | expressao_multiplicativa DIVIDE expressao_unaria\n                             | expressao_multiplicativa MODULO expressao_unaria\n    \n    expressao_unaria : expressao_postfix\n                     | MINUS expressao_unaria\n                     | PLUSPLUS expressao_postfix\n                     | MINUSMINUS expressao_postfix\n    \n    expressao_postfix : primaria\n                      | primaria LBRACKET expressao RBRACKET\n                      | primaria LPAREN argumentos RPAREN\n                      | primaria DOT ID\n    \n    argumentos : expressoes\n               | \n    \n    primaria : ID\n             | NUM_INT\n             | NUM_DEC\n             | TEXTO\n             | LPAREN expressao RPAREN\n    '
    
_lr_action_items = {'STRUCT':([0,88,],[8,8,]),'COMMENT':([0,88,],[9,9,]),'MULTICOMMENT':([0,88,],[10,10,]),'NUM_INT':([0,17,18,19,26,29,30,32,41,42,43,44,45,46,47,48,49,50,51,52,53,57,63,88,92,93,94,95,96,97,98,99,],[11,33,11,11,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,11,11,33,33,33,33,33,33,33,33,]),'NUM_DEC':([0,17,18,19,26,29,30,32,41,42,43,44,45,46,47,48,49,50,51,52,53,57,63,88,92,93,94,95,96,97,98,99,],[12,34,12,12,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,12,12,34,34,34,34,34,34,34,34,]),'TEXTO':([0,17,18,19,26,29,30,32,41,42,43,44,45,46,47,48,49,50,51,52,53,57,63,88,92,93,94,95,96,97,98,99,],[13,35,13,13,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,13,13,35,35,35,35,35,35,35,35,]),'$end':([1,2,3,4,5,6,9,10,16,40,64,87,118,],[0,-1,-2,-3,-4,-5,-17,-18,-6,-7,-41,-11,-16,]),'RBRACE':([3,4,5,6,9,10,16,38,40,64,87,101,118,],[-2,-3,-4,-5,-17,-18,-6,64,-7,-41,-11,118,-16,]),'ID':([7,8,11,12,13,17,26,29,30,32,36,39,41,42,43,44,45,46,47,48,49,50,51,52,53,57,58,59,92,93,94,95,96,97,98,99,],[14,15,-8,-9,-10,20,20,20,20,20,61,65,20,20,20,20,20,20,20,20,20,20,20,20,20,20,83,84,102,104,106,108,110,112,114,116,]),'SEMICOLON':([14,20,21,22,23,24,25,27,28,31,33,34,35,54,55,56,65,66,67,68,69,70,71,72,73,74,75,76,77,78,84,85,90,91,],[16,-73,40,-45,-46,-49,-56,-59,-63,-67,-74,-75,-76,-64,-65,-66,16,-47,-48,-50,-51,-52,-53,-54,-55,-57,-58,-60,-61,-62,-70,-77,-68,-69,]),'EQUAL':([14,65,83,],[17,17,92,]),'LPAREN':([14,17,20,26,29,30,31,32,33,34,35,41,42,43,44,45,46,47,48,49,50,51,52,53,57,85,92,93,94,95,96,97,98,99,102,104,106,108,110,112,114,116,],[18,32,-73,32,32,32,58,32,-74,-75,-76,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-77,32,32,32,32,32,32,32,32,-73,-73,-73,-73,-73,-73,-73,-73,]),'LBRACE':([15,62,],[19,88,]),'MINUS':([17,20,24,25,26,27,28,31,32,33,34,35,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,68,69,70,71,72,73,74,75,76,77,78,84,85,90,91,92,93,94,95,96,97,98,99,102,104,106,108,110,112,114,116,],[26,-73,50,-56,26,-59,-63,-67,26,-74,-75,-76,26,26,26,26,26,26,26,26,26,26,26,26,26,-64,-65,-66,26,50,50,50,50,50,50,-57,-58,-60,-61,-62,-70,-77,-68,-69,26,26,26,26,26,26,26,26,-73,-73,-73,-73,-73,-73,-73,-73,]),'PLUSPLUS':([17,26,32,41,42,43,44,45,46,47,48,49,50,51,52,53,57,92,93,94,95,96,97,98,99,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'MINUSMINUS':([17,26,32,41,42,43,44,45,46,47,48,49,50,51,52,53,57,92,93,94,95,96,97,98,99,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'LBRACKET':([20,31,33,34,35,61,85,102,104,106,108,110,112,114,116,],[-73,57,-74,-75,-76,86,-77,-73,-73,-73,-73,-73,-73,-73,-73,]),'DOT':([20,31,33,34,35,85,102,104,106,108,110,112,114,116,],[-73,59,-74,-75,-76,-77,-73,-73,-73,-73,-73,-73,-73,-73,]),'TIMES':([20,25,27,28,31,33,34,35,54,55,56,74,75,76,77,78,84,85,90,91,102,104,106,108,110,112,114,116,],[-73,51,-59,-63,-67,-74,-75,-76,-64,-65,-66,51,51,-60,-61,-62,-70,-77,-68,-69,-73,-73,-73,-73,-73,-73,-73,-73,]),'DIVIDE':([20,25,27,28,31,33,34,35,54,55,56,74,75,76,77,78,84,85,90,91,102,104,106,108,110,112,114,116,],[-73,52,-59,-63,-67,-74,-75,-76,-64,-65,-66,52,52,-60,-61,-62,-70,-77,-68,-69,-73,-73,-73,-73,-73,-73,-73,-73,]),'MODULO':([20,25,27,28,31,33,34,35,54,55,56,74,75,76,77,78,84,85,90,91,102,104,106,108,110,112,114,116,],[-73,53,-59,-63,-67,-74,-75,-76,-64,-65,-66,53,53,-60,-61,-62,-70,-77,-68,-69,-73,-73,-73,-73,-73,-73,-73,-73,]),'GREATER':([20,24,25,27,28,31,33,34,35,54,55,56,74,75,76,77,78,84,85,90,91,102,104,106,108,110,112,114,116,],[-73,43,-56,-59,-63,-67,-74,-75,-76,-64,-65,-66,-57,-58,-60,-61,-62,-70,-77,-68,-69,-73,-73,-73,-73,-73,-73,-73,-73,]),'GREATEREQUAL':([20,24,25,27,28,31,33,34,35,54,55,56,74,75,76,77,78,84,85,90,91,102,104,106,108,110,112,114,116,],[-73,44,-56,-59,-63,-67,-74,-75,-76,-64,-65,-66,-57,-58,-60,-61,-62,-70,-77,-68,-69,-73,-73,-73,-73,-73,-73,-73,-73,]),'LESS':([20,24,25,27,28,31,33,34,35,54,55,56,74,75,76,77,78,84,85,90,91,102,104,106,108,110,112,114,116,],[-73,45,-56,-59,-63,-67,-74,-75,-76,-64,-65,-66,-57,-58,-60,-61,-62,-70,-77,-68,-69,-73,-73,-73,-73,-73,-73,-73,-73,]),'LESSEQUAL':([20,24,25,27,28,31,33,34,35,54,55,56,74,75,76,77,78,84,85,90,91,102,104,106,108,110,112,114,116,],[-73,46,-56,-59,-63,-67,-74,-75,-76,-64,-65,-66,-57,-58,-60,-61,-62,-70,-77,-68,-69,-73,-73,-73,-73,-73,-73,-73,-73,]),'NOTEQUAL':([20,24,25,27,28,31,33,34,35,54,55,56,74,75,76,77,78,84,85,90,91,102,104,106,108,110,112,114,116,],[-73,47,-56,-59,-63,-67,-74,-75,-76,-64,-65,-66,-57,-58,-60,-61,-62,-70,-77,-68,-69,-73,-73,-73,-73,-73,-73,-73,-73,]),'EQUALS':([20,24,25,27,28,31,33,34,35,54,55,56,74,75,76,77,78,84,85,90,91,102,104,106,108,110,112,114,116,],[-73,48,-56,-59,-63,-67,-74,-75,-76,-64,-65,-66,-57,-58,-60,-61,-62,-70,-77,-68,-69,-73,-73,-73,-73,-73,-73,-73,-73,]),'PLUS':([20,24,25,27,28,31,33,34,35,54,55,56,68,69,70,71,72,73,74,75,76,77,78,84,85,90,91,102,104,106,108,110,112,114,116,],[-73,49,-56,-59,-63,-67,-74,-75,-76,-64,-65,-66,49,49,49,49,49,49,-57,-58,-60,-61,-62,-70,-77,-68,-69,-73,-73,-73,-73,-73,-73,-73,-73,]),'ANDAND':([20,22,23,24,25,27,28,31,33,34,35,54,55,56,66,67,68,69,70,71,72,73,74,75,76,77,78,84,85,90,91,102,104,106,108,110,112,114,116,],[-73,41,-46,-49,-56,-59,-63,-67,-74,-75,-76,-64,-65,-66,-47,-48,-50,-51,-52,-53,-54,-55,-57,-58,-60,-61,-62,-70,-77,-68,-69,-73,-73,-73,-73,-73,-73,-73,-73,]),'OROR':([20,22,23,24,25,27,28,31,33,34,35,54,55,56,66,67,68,69,70,71,72,73,74,75,76,77,78,84,85,90,91,102,104,106,108,110,112,114,116,],[-73,42,-46,-49,-56,-59,-63,-67,-74,-75,-76,-64,-65,-66,-47,-48,-50,-51,-52,-53,-54,-55,-57,-58,-60,-61,-62,-70,-77,-68,-69,-73,-73,-73,-73,-73,-73,-73,-73,]),'RPAREN':([20,22,23,24,25,27,28,31,33,34,35,37,54,55,56,58,60,61,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,84,85,89,90,91,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[-73,-45,-46,-49,-56,-59,-63,-67,-74,-75,-76,62,-64,-65,-66,-72,85,-14,-47,-48,-50,-51,-52,-53,-54,-55,-57,-58,-60,-61,-62,91,-71,-19,-70,-77,-12,-68,-69,-15,-28,-20,-29,-21,-30,-22,-31,-23,-32,-24,-33,-25,-34,-26,-35,-27,]),'RBRACKET':([20,22,23,24,25,27,28,31,33,34,35,54,55,56,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,86,90,91,],[-73,-45,-46,-49,-56,-59,-63,-67,-74,-75,-76,-64,-65,-66,-47,-48,-50,-51,-52,-53,-54,-55,-57,-58,-60,-61,-62,90,-70,-77,100,-68,-69,]),'COMMA':([37,61,89,100,],[63,-14,63,-15,]),'PLUSEQUAL':([83,],[93,]),'MINUSEQUAL':([83,],[94,]),'TIMESEQUAL':([83,],[95,]),'DIVEQUAL':([83,],[96,]),'MODEQUAL':([83,],[97,]),'ANDANDEQUAL':([83,],[98,]),'OROREQUAL':([83,],[99,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracao':([0,88,],[2,101,]),'declaracao_variavel':([0,19,88,],[3,38,3,]),'declaracao_funcao':([0,88,],[4,4,]),'declaracao_estrutura':([0,88,],[5,5,]),'comentario':([0,88,],[6,6,]),'tipo':([0,18,19,63,88,],[7,36,39,36,7,]),'expressao':([17,32,57,92,93,94,95,96,97,98,99,],[21,60,79,103,105,107,109,111,113,115,117,]),'expressao_logica':([17,32,57,92,93,94,95,96,97,98,99,],[22,22,22,22,22,22,22,22,22,22,22,]),'expressao_relacional':([17,32,41,42,57,92,93,94,95,96,97,98,99,],[23,23,66,67,23,23,23,23,23,23,23,23,23,]),'expressao_aritmetica':([17,32,41,42,43,44,45,46,47,48,57,92,93,94,95,96,97,98,99,],[24,24,24,24,68,69,70,71,72,73,24,24,24,24,24,24,24,24,24,]),'expressao_multiplicativa':([17,32,41,42,43,44,45,46,47,48,49,50,57,92,93,94,95,96,97,98,99,],[25,25,25,25,25,25,25,25,25,25,74,75,25,25,25,25,25,25,25,25,25,]),'expressao_unaria':([17,26,32,41,42,43,44,45,46,47,48,49,50,51,52,53,57,92,93,94,95,96,97,98,99,],[27,54,27,27,27,27,27,27,27,27,27,27,27,76,77,78,27,27,27,27,27,27,27,27,27,]),'expressao_postfix':([17,26,29,30,32,41,42,43,44,45,46,47,48,49,50,51,52,53,57,92,93,94,95,96,97,98,99,],[28,28,55,56,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'primaria':([17,26,29,30,32,41,42,43,44,45,46,47,48,49,50,51,52,53,57,92,93,94,95,96,97,98,99,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'parametros':([18,63,],[37,89,]),'argumentos':([58,],[80,]),'expressoes':([58,],[81,]),'atribuicao':([58,],[82,]),'bloco':([62,],[87,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaracao','programa',1,'p_programa','parser.py',6),
  ('declaracao -> declaracao_variavel','declaracao',1,'p_declaracao','parser.py',11),
  ('declaracao -> declaracao_funcao','declaracao',1,'p_declaracao','parser.py',12),
  ('declaracao -> declaracao_estrutura','declaracao',1,'p_declaracao','parser.py',13),
  ('declaracao -> comentario','declaracao',1,'p_declaracao','parser.py',14),
  ('declaracao_variavel -> tipo ID SEMICOLON','declaracao_variavel',3,'p_declaracao_variavel','parser.py',19),
  ('declaracao_variavel -> tipo ID EQUAL expressao SEMICOLON','declaracao_variavel',5,'p_declaracao_variavel','parser.py',20),
  ('tipo -> NUM_INT','tipo',1,'p_tipo','parser.py',25),
  ('tipo -> NUM_DEC','tipo',1,'p_tipo','parser.py',26),
  ('tipo -> TEXTO','tipo',1,'p_tipo','parser.py',27),
  ('declaracao_funcao -> tipo ID LPAREN parametros RPAREN bloco','declaracao_funcao',6,'p_declaracao_funcao','parser.py',32),
  ('parametros -> parametros','parametros',1,'p_parametros','parser.py',37),
  ('parametros -> parametros COMMA parametros','parametros',3,'p_parametros','parser.py',38),
  ('parametros -> tipo ID','parametros',2,'p_parametros','parser.py',39),
  ('parametros -> tipo ID LBRACKET RBRACKET','parametros',4,'p_parametros','parser.py',40),
  ('bloco -> LBRACE declaracao RBRACE','bloco',3,'p_bloco','parser.py',45),
  ('comentario -> COMMENT','comentario',1,'p_comentario','parser.py',51),
  ('comentario -> MULTICOMMENT','comentario',1,'p_comentario','parser.py',52),
  ('expressoes -> atribuicao','expressoes',1,'p_expressoes','parser.py',57),
  ('atribuicao -> ID EQUAL expressao','atribuicao',3,'p_atribuicao','parser.py',62),
  ('atribuicao -> ID PLUSEQUAL expressao','atribuicao',3,'p_atribuicao','parser.py',63),
  ('atribuicao -> ID MINUSEQUAL expressao','atribuicao',3,'p_atribuicao','parser.py',64),
  ('atribuicao -> ID TIMESEQUAL expressao','atribuicao',3,'p_atribuicao','parser.py',65),
  ('atribuicao -> ID DIVEQUAL expressao','atribuicao',3,'p_atribuicao','parser.py',66),
  ('atribuicao -> ID MODEQUAL expressao','atribuicao',3,'p_atribuicao','parser.py',67),
  ('atribuicao -> ID ANDANDEQUAL expressao','atribuicao',3,'p_atribuicao','parser.py',68),
  ('atribuicao -> ID OROREQUAL expressao','atribuicao',3,'p_atribuicao','parser.py',69),
  ('atribuicao -> ID EQUAL ID','atribuicao',3,'p_atribuicao','parser.py',70),
  ('atribuicao -> ID PLUSEQUAL ID','atribuicao',3,'p_atribuicao','parser.py',71),
  ('atribuicao -> ID MINUSEQUAL ID','atribuicao',3,'p_atribuicao','parser.py',72),
  ('atribuicao -> ID TIMESEQUAL ID','atribuicao',3,'p_atribuicao','parser.py',73),
  ('atribuicao -> ID DIVEQUAL ID','atribuicao',3,'p_atribuicao','parser.py',74),
  ('atribuicao -> ID MODEQUAL ID','atribuicao',3,'p_atribuicao','parser.py',75),
  ('atribuicao -> ID ANDANDEQUAL ID','atribuicao',3,'p_atribuicao','parser.py',76),
  ('atribuicao -> ID OROREQUAL ID','atribuicao',3,'p_atribuicao','parser.py',77),
  ('estrutura_controle -> IF LPAREN expressao RPAREN bloco','estrutura_controle',5,'p_estrutura_controle','parser.py',82),
  ('estrutura_controle -> IF LPAREN expressao RPAREN ELSE bloco','estrutura_controle',6,'p_estrutura_controle','parser.py',83),
  ('estrutura_controle -> WHILE LPAREN expressao RPAREN bloco','estrutura_controle',5,'p_estrutura_controle','parser.py',84),
  ('estrutura_controle -> FOR LPAREN expressao SEMICOLON expressao SEMICOLON expressao RPAREN bloco','estrutura_controle',9,'p_estrutura_controle','parser.py',85),
  ('estrutura_controle -> RETURN expressao','estrutura_controle',2,'p_estrutura_controle','parser.py',86),
  ('declaracao_estrutura -> STRUCT ID LBRACE declaracao_variavel RBRACE','declaracao_estrutura',5,'p_declaracao_estrutura','parser.py',91),
  ('array -> ID LBRACKET expressao RBRACKET','array',4,'p_array','parser.py',96),
  ('array -> ID LBRACKET RBRACKET','array',3,'p_array','parser.py',97),
  ('array -> ID LBRACE expressoes RBRACE','array',4,'p_array','parser.py',98),
  ('expressao -> expressao_logica','expressao',1,'p_expressao','parser.py',103),
  ('expressao_logica -> expressao_relacional','expressao_logica',1,'p_expressao_logica','parser.py',108),
  ('expressao_logica -> expressao_logica ANDAND expressao_relacional','expressao_logica',3,'p_expressao_logica','parser.py',109),
  ('expressao_logica -> expressao_logica OROR expressao_relacional','expressao_logica',3,'p_expressao_logica','parser.py',110),
  ('expressao_relacional -> expressao_aritmetica','expressao_relacional',1,'p_expressao_relacional','parser.py',115),
  ('expressao_relacional -> expressao_aritmetica GREATER expressao_aritmetica','expressao_relacional',3,'p_expressao_relacional','parser.py',116),
  ('expressao_relacional -> expressao_aritmetica GREATEREQUAL expressao_aritmetica','expressao_relacional',3,'p_expressao_relacional','parser.py',117),
  ('expressao_relacional -> expressao_aritmetica LESS expressao_aritmetica','expressao_relacional',3,'p_expressao_relacional','parser.py',118),
  ('expressao_relacional -> expressao_aritmetica LESSEQUAL expressao_aritmetica','expressao_relacional',3,'p_expressao_relacional','parser.py',119),
  ('expressao_relacional -> expressao_aritmetica NOTEQUAL expressao_aritmetica','expressao_relacional',3,'p_expressao_relacional','parser.py',120),
  ('expressao_relacional -> expressao_aritmetica EQUALS expressao_aritmetica','expressao_relacional',3,'p_expressao_relacional','parser.py',121),
  ('expressao_aritmetica -> expressao_multiplicativa','expressao_aritmetica',1,'p_expressao_aritmetica','parser.py',126),
  ('expressao_aritmetica -> expressao_aritmetica PLUS expressao_multiplicativa','expressao_aritmetica',3,'p_expressao_aritmetica','parser.py',127),
  ('expressao_aritmetica -> expressao_aritmetica MINUS expressao_multiplicativa','expressao_aritmetica',3,'p_expressao_aritmetica','parser.py',128),
  ('expressao_multiplicativa -> expressao_unaria','expressao_multiplicativa',1,'p_expressao_multiplicativa','parser.py',133),
  ('expressao_multiplicativa -> expressao_multiplicativa TIMES expressao_unaria','expressao_multiplicativa',3,'p_expressao_multiplicativa','parser.py',134),
  ('expressao_multiplicativa -> expressao_multiplicativa DIVIDE expressao_unaria','expressao_multiplicativa',3,'p_expressao_multiplicativa','parser.py',135),
  ('expressao_multiplicativa -> expressao_multiplicativa MODULO expressao_unaria','expressao_multiplicativa',3,'p_expressao_multiplicativa','parser.py',136),
  ('expressao_unaria -> expressao_postfix','expressao_unaria',1,'p_expressao_unaria','parser.py',141),
  ('expressao_unaria -> MINUS expressao_unaria','expressao_unaria',2,'p_expressao_unaria','parser.py',142),
  ('expressao_unaria -> PLUSPLUS expressao_postfix','expressao_unaria',2,'p_expressao_unaria','parser.py',143),
  ('expressao_unaria -> MINUSMINUS expressao_postfix','expressao_unaria',2,'p_expressao_unaria','parser.py',144),
  ('expressao_postfix -> primaria','expressao_postfix',1,'p_expressao_postfix','parser.py',149),
  ('expressao_postfix -> primaria LBRACKET expressao RBRACKET','expressao_postfix',4,'p_expressao_postfix','parser.py',150),
  ('expressao_postfix -> primaria LPAREN argumentos RPAREN','expressao_postfix',4,'p_expressao_postfix','parser.py',151),
  ('expressao_postfix -> primaria DOT ID','expressao_postfix',3,'p_expressao_postfix','parser.py',152),
  ('argumentos -> expressoes','argumentos',1,'p_argumentos','parser.py',157),
  ('argumentos -> <empty>','argumentos',0,'p_argumentos','parser.py',158),
  ('primaria -> ID','primaria',1,'p_primaria','parser.py',163),
  ('primaria -> NUM_INT','primaria',1,'p_primaria','parser.py',164),
  ('primaria -> NUM_DEC','primaria',1,'p_primaria','parser.py',165),
  ('primaria -> TEXTO','primaria',1,'p_primaria','parser.py',166),
  ('primaria -> LPAREN expressao RPAREN','primaria',3,'p_primaria','parser.py',167),
]
